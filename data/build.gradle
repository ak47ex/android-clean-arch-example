apply plugin: 'com.android.library'

buildscript {
    repositories {
        mavenCentral()
    }
}
android {

    def globalConfiguration = rootProject.extensions.getByName("ext")


    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")



    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.dataTestDependencies

    implementation project(':domain')

    implementation             dataDependencies.jacksonCore
    implementation             dataDependencies.jacksonAnnotations
    implementation             dataDependencies.jacksonDatabind
    implementation             dataDependencies.rxJava
    implementation             dataDependencies.retrofit
    implementation             dataDependencies.retrofitConverter
    implementation             dataDependencies.dagger
    implementation             dataDependencies.androidAnnotations
    annotationProcessor dataDependencies.daggerCompiler

    testImplementation testDependencies.junit
    testImplementation testDependencies.assertj
    testImplementation testDependencies.mockito
    testImplementation testDependencies.robolectric
}
